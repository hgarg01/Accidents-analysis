library(UBL)
library(compareGroups)
library(caret)
library(neuralnet)
library(utils)
library(pROC)
library(naivebayes)
library(dplyr)
df=readRDS("final_df.rds")
df=readRDS("C:/Users/harsh/Documents/R/Project1/final_df.rds")
df1 = read.csv("c:/users/harsh/documents/combined_df.csv")
df1 = read.csv("c:/users/harsh/documents/R/Project1/final_df.csv")
df1 = read.csv("c:/users/harsh/documents/R/Project1/final_df.csv")
#under.sample <- RandUnderClassif(Accident_Severity~., df, C.perc = list(fatal = 1, serious= 0.6, mild = 0.2))
c <- compareGroups(Accident_Severity~., data = df, method = 1)
createTable(c)
trainIndex <- createDataPartition(df$Accident_Severity, p = .60,list=FALSE)
train_set <- df[trainIndex,]
temp <- df[-trainIndex,]
valIndex <- createDataPartition(temp$Accident_Severity, p = .50,list=FALSE)
validation_set <- temp[valIndex,]
test_set <- temp[-valIndex,]
smoted_train <- SmoteClassif(Accident_Severity~., train_set, C.perc = list('1' = 4,'2'= 0.8,'3'= 0.4), k = 4, dist = "HEOM")
table(train_set$Accident_Severity)
table(smoted_train$Accident_Severity)
train_y <-smoted_train[,"Accident_Severity"]
train_x <- smoted_train[,-3]
#Naive Bayes with cross validation
library(e1071)
NB_with_CV <- naive_bayes(Accident_Severity~.,data = smoted_train,trControl = trainControl(method = 'cv', number = 5), laplace = TRUE)
library(naivebayes)
NB_model <- naive_bayes(Accident_Severity~.,data = train_set, laplace = T)
plot(NB_model)
pred.NB_CV<- predict(NB_model,validation_set,type = "class")
(tab1 <- table(pred.NB_CV,test_set$Accident_Severity))
##misclassification error
1-sum(diag(tab1))/sum(tab1)
cf <- confusionMatrix(pred.NB_CV, validation_set$Accident_Severity,positive = '1')
cf$byClass
t <- table(validation_set$Accident_Severity)
wtd_recall <- (cf$byClass[1,6]*t[1]+cf$byClass[2,6]*t[2]+cf$byClass[3,6]*t[3])/(nrow(test_set))
wtd_recall
predicted <- predict(NB_model, test_set, probability = TRUE)
multiclass.roc(response= test_set$Accident_Severity, predictor = factor(predicted, ordered = TRUE), plot = TRUE)
table(train_set$Accident_Severity)
rf.cutoff <- randomForest(Accident_Severity~., data = train_set,cutoff = c(0.1,0.15,0.75))
